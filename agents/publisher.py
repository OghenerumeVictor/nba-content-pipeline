# agents/publisher.py

# Placeholder or autogenerated content for agents/publisher.py

import os
import requests

# Meta + WP configs
WP_URL = os.getenv("WORDPRESS_URL")
WP_USER = os.getenv("WORDPRESS_USER")
WP_APP_PASS = os.getenv("WORDPRESS_APP_PASSWORD")
FB_PAGE_ID = os.getenv("FACEBOOK_PAGE_ID")
FB_ACCESS_TOKEN = os.getenv("FACEBOOK_ACCESS_TOKEN")
IG_BUSINESS_ID = os.getenv("INSTAGRAM_BUSINESS_ID")

def fetch_thumbnail_url(query):
    yt_api = os.getenv("YOUTUBE_API_KEY")
    url = "https://www.googleapis.com/youtube/v3/search"
    params = {
        "part": "snippet", "q": query,
        "type": "video", "maxResults": 1, "key": yt_api
    }
    response = requests.get(url, params=params)
    items = response.json().get("items", [])
    if items:
        return items[0]["snippet"]["thumbnails"]["high"]["url"]
    return ""

def publish_all(blog_html, twitter_text, insta_text):
    publish_to_wordpress(blog_html)
    publish_to_twitter(twitter_text)
    publish_to_facebook(insta_text)
    publish_to_instagram(insta_text)

def publish_to_wordpress(html):
    endpoint = f"{WP_URL}/wp-json/wp/v2/posts"
    response = requests.post(endpoint, auth=(WP_USER, WP_APP_PASS), json={
        "title": "NBA Game Recap",
        "content": html,
        "status": "publish"
    })
    print("WordPress:", response.status_code)

def publish_to_twitter(tweet):
    print("Simulated Tweet:", tweet)

def publish_to_facebook(caption):
    endpoint = f"https://graph.facebook.com/{FB_PAGE_ID}/feed"
    requests.post(endpoint, data={"message": caption, "access_token": FB_ACCESS_TOKEN})

def publish_to_instagram(caption):
    image_url = fetch_thumbnail_url("NBA Highlights")
    if not image_url:
        print("No image.")
        return

    create_url = f"https://graph.facebook.com/v18.0/{IG_BUSINESS_ID}/media"
    publish_url = f"https://graph.facebook.com/v18.0/{IG_BUSINESS_ID}/media_publish"

    container = requests.post(create_url, data={
        "image_url": image_url, "caption": caption, "access_token": FB_ACCESS_TOKEN
    }).json()
    if "id" in container:
        requests.post(publish_url, data={
            "creation_id": container["id"], "access_token": FB_ACCESS_TOKEN
        })

